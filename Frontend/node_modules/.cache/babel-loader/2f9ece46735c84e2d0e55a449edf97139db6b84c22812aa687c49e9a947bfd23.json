{"ast":null,"code":"var _jsxFileName = \"/Users/sushaanth/UrbanAirQualityIndex/UrbanAirQualityIndex/Frontend/src/components/AQIChecker.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AQIChecker.js\nimport React, { useState } from 'react';\nimport './AQIChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AQIChecker = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [aqi, setAqi] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchAqi = async () => {\n    setLoading(true);\n    setError(null);\n    setAqi(null);\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/aqi?city=${encodeURIComponent(city)}`);\n      if (!res.ok) throw new Error(`Error ${res.status}`);\n      const {\n        aqi\n      } = await res.json();\n      setAqi(aqi);\n    } catch {\n      setError('Failed to fetch AQI.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (city.trim()) fetchAqi();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aqi-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"aqi-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        className: \"aqi-label\",\n        children: \"Enter city name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        className: \"aqi-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"aqi-button\",\n        children: loading ? 'Loading…' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), aqi !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"aqi-result\",\n        children: [\"AQI for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \": \", aqi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"aqi-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AQIChecker, \"mahRvKPTIZYJ282FW7W4sA+9F60=\");\n_c = AQIChecker;\nexport default AQIChecker;\nvar _c;\n$RefreshReg$(_c, \"AQIChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AQIChecker","_s","city","setCity","aqi","setAqi","loading","setLoading","error","setError","fetchAqi","res","fetch","process","env","REACT_APP_API_URL","encodeURIComponent","ok","Error","status","json","handleSubmit","e","preventDefault","trim","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/sushaanth/UrbanAirQualityIndex/UrbanAirQualityIndex/Frontend/src/components/AQIChecker.js"],"sourcesContent":["// frontend/src/components/AQIChecker.js\nimport React, { useState } from 'react';\nimport './AQIChecker.css';\n\nconst AQIChecker = () => {\n  const [city, setCity]       = useState('');\n  const [aqi, setAqi]         = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError]     = useState(null);\n\n  const fetchAqi = async () => {\n    setLoading(true);\n    setError(null);\n    setAqi(null);\n    try {\n      const res = await fetch(\n        `${process.env.REACT_APP_API_URL}/aqi?city=${encodeURIComponent(city)}`\n      );\n      if (!res.ok) throw new Error(`Error ${res.status}`);\n      const { aqi } = await res.json();\n      setAqi(aqi);\n    } catch {\n      setError('Failed to fetch AQI.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (city.trim()) fetchAqi();\n  };\n\n  return (\n    <div className=\"aqi-container\">\n      <form onSubmit={handleSubmit} className=\"aqi-form\">\n        <label htmlFor=\"city\" className=\"aqi-label\">\n          Enter city name:\n        </label>\n        <input\n          id=\"city\"\n          type=\"text\"\n          value={city}\n          onChange={e => setCity(e.target.value)}\n          className=\"aqi-input\"\n        />\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"aqi-button\"\n        >\n          {loading ? 'Loading…' : 'Submit'}\n        </button>\n\n        {aqi !== null && (\n          <p className=\"aqi-result\">\n            AQI for <strong>{city}</strong>: {aqi}\n          </p>\n        )}\n        {error && (\n          <p className=\"aqi-error\">\n            {error}\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default AQIChecker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}